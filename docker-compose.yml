version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: 
      - .env
    volumes:
      - ./frontend:/app
      - node-modules:/app/node_modules
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    env_file: 
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  maven-cache:
  node-modules: